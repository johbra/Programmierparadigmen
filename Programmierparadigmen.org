#+SETUPFILE: ./theme-bigblow-local.setup
#+TITLE: Programmierparadigmen
#+AUTHOR: Johannes Brauer
#+OPTIONS:   H:4
#+OPTIONS: num:nil
#+OPTIONS: toc:nil
#+OPTIONS: reveal_single_file:nil
#+Language:  de
#+STARTUP: latexpreview
#+STARTUP: inlineimages
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="mycss/mystyle.css" />
# +REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/3.0.0/
#+REVEAL_THEME: solarized
#+REVEAL_TRANS: slide
#+REVEAL_HLEVEL: 1
# #+REVEAL_SLIDE_FOOTER: Prof. Dr.-Ing. Johannes Brauer: Programmierparadigmen
#+REVEAL_INIT_SCRIPT: dependencies: [ { src: 'plugin/menu/menu.js', async: true }]
#+REVEAL_MARGIN: 0.05
#+REVEAL_EXTRA_CSS: ./mycss/myrevealstyle.css
# +REVEAL_EXTRA_CSS: file:///Users/Shared/Dropbox/Programmierparadigmen/myrevealstyle.css
#+OPTIONS: reveal_control:t
#+OPTIONS: menue:t
#+REVEAL_PLUGINS: (zoom menu)

# um Folien mit reveal.js erzeugen zu können:ml
# M-x load-library und dann ox-reveal

* Übersicht
+ [[file:ProPar-Uebersicht5.org][Übersicht 5. Semester]]
+ [[file:ProPar-Uebersicht6.org][Übersicht 6. Semester]]
* Metadaten
** Umfang/Semester
+ 40 Uh / 5
+ 40 Uh / 6
+ 7 ECTS
** Prüfungsform
+ Klausur
** Ziele
*** Qualifikationsziel: Verständnis von mathematischen und formalen Grundlagen der Informatik
  + Modulziel:
    Absolventen kennen die mathematischen Grundlagen der funktionalen
    und prädikativen Programmierung. 

*** Qualifikationsziel: Kenntnisse und Fertigkeiten zur algorithmischen Formulierung von Problemlösungen und ihrer Umsetzung in verständliche und effiziente Computerprogramme  
  + Modulziele:
    + Entwicklung der Fähigkeit, korrekte Programme systematisch zu entwickeln
    + Entwicklung der Fähigkeit, fortgeschrittene Programmiertechniken anzuwenden
    + Entwicklung der Fähigkeit den Nutzen verschiedener Programmierstile zu erkennen

*** Qualifikationsziel: Befähigung zum Einsatz professioneller Methoden und Werkzeuge zur Softwareentwicklung
    + Modulziel:
      Absolventen kennen innovative Methoden der professionellen Softwareentwicklung.
** Lerninhalte lt. Modulhandbuch
*** Gegenüberstellung der klassischen Programmierparadigmen:
  + imperative Programmierung 
  + funktionale Programmierung 
  + prädikative Programmierung
*** Funktionale Programmierung
  + Funktionsbegriff / funktionale Abstraktion
  + Programmieren mit Funktionen
  + Methodische Abstraktion: Entwurfsvorschriften à Funktionen hˆherer Ordnung
  + weitere funktionale Programmiertechniken
*** Prädikative Programmierung
  + Grundlagen
  + Programmiertechniken
  + Anwendungen
  + Prolog
*** Erweiterung der prädikativen Programmierung 
  + Constraint-Programmierung
* [[https://moodle2.nordakademie.de/course/view.php?id=1175][moodle]]
